import 'package:flutter/material.dart';

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _selectedIndex = 4; // Set the default selected index to ExerciseScreen

  static List<Widget> _widgetOptions = <Widget>[
    HomeScreen(),
    AboutScreen(),
    ContactScreen(),
    SettingsScreen(),
    ExerciseScreen(), // New screen added here
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.deepPurple,
        title: Text(
          'My New App',
          style: TextStyle(fontWeight: FontWeight.bold, color: Colors.white),
        ),
        centerTitle: true,
      ),
      body: Center(
        child: _widgetOptions.elementAt(_selectedIndex),
      ),
      bottomNavigationBar: BottomNavigationBar(
        type: BottomNavigationBarType.fixed,
        backgroundColor: Colors.deepPurple,
        selectedItemColor: Colors.white,
        unselectedItemColor: Colors.white70,
        currentIndex: _selectedIndex,
        onTap: _onItemTapped,
        items: [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.info),
            label: 'About',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.contact_mail),
            label: 'Contact',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.settings),
            label: 'Settings',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.view_list),
            label: 'Exercise',
          ),
        ],
      ),
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text(
          'Home Screen',
          style: TextStyle(fontSize: 24, color: Colors.green, fontWeight: FontWeight.bold),
        ),
      ),
    );
  }
}

class AboutScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text(
          'About Screen',
          style: TextStyle(fontSize: 24, color: Colors.blue, fontWeight: FontWeight.bold),
        ),
      ),
    );
  }
}

class ContactScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text(
          'Contact Screen',
          style: TextStyle(fontSize: 24, color: Colors.orange, fontWeight: FontWeight.bold),
        ),
      ),
    );
  }
}

class SettingsScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text(
          'Settings Screen',
          style: TextStyle(fontSize: 24, color: Colors.lightGreen, fontWeight: FontWeight.bold),
        ),
      ),
    );
  }
}

// New ExerciseScreen class with Wrap
class ExerciseScreen extends StatelessWidget {
  final List<String> items = [
    'Alert Dialog',
    'Delete Dialog',
    'Simple Dialog',
    'Dialog',
    'Input Dialog',
    'Stateful Dialog',
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Wrap(
          spacing: 16,
          runSpacing: 16,
          children: items.map((item) {
            return DialogButton(
              color: _getButtonColor(item),
              text: item,
              onPressed: () {
                // Code to show corresponding dialog
              },
            );
          }).toList(),
        ),
      ),
    );
  }

  Color _getButtonColor(String item) {
    switch (item) {
      case 'Alert Dialog':
        return Colors.red;
      case 'Delete Dialog':
        return Colors.brown;
      case 'Simple Dialog':
        return Colors.blue;
      case 'Dialog':
        return Colors.green;
      case 'Input Dialog':
        return Colors.purple;
      case 'Stateful Dialog':
        return Colors.orange;
      default:
        return Colors.grey;
    }
  }
}

class DialogButton extends StatelessWidget {
  final Color color;
  final String text;
  final VoidCallback onPressed;

  DialogButton({required this.color, required this.text, required this.onPressed});

  @override
  Widget build(BuildContext context) {
    return ElevatedButton(
      style: ElevatedButton.styleFrom(
        backgroundColor: color,
        padding: EdgeInsets.symmetric(horizontal: 24, vertical: 16),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(8),
        ),
      ),
      onPressed: onPressed,
      child: Text(
        text,
        style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
      ),
    );
  }
}
